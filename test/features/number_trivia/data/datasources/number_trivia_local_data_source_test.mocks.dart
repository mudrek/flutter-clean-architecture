// Mocks generated by Mockito 5.0.14 from annotations
// in flutter_clean_architecture/test/features/number_trivia/data/datasources/number_trivia_local_data_source_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:flutter_clean_architecture/core/plugins/prefs.dart' as _i3;
import 'package:flutter_secure_storage/flutter_secure_storage.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeFlutterSecureStorage_0 extends _i1.Fake
    implements _i2.FlutterSecureStorage {}

/// A class which mocks [SecureStoragePrefs].
///
/// See the documentation for Mockito's code generation for more information.
class MockSecureStoragePrefs extends _i1.Mock
    implements _i3.SecureStoragePrefs {
  MockSecureStoragePrefs() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.FlutterSecureStorage get storage => (super.noSuchMethod(
      Invocation.getter(#storage),
      returnValue: _FakeFlutterSecureStorage_0()) as _i2.FlutterSecureStorage);
  @override
  set storage(_i2.FlutterSecureStorage? _storage) =>
      super.noSuchMethod(Invocation.setter(#storage, _storage),
          returnValueForMissingStub: null);
  @override
  _i4.Future<String> getString(String? key) =>
      (super.noSuchMethod(Invocation.method(#getString, [key]),
          returnValue: Future<String>.value('')) as _i4.Future<String>);
  @override
  _i4.Future<void> setString(String? key, String? s) =>
      (super.noSuchMethod(Invocation.method(#setString, [key, s]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  String toString() => super.toString();
}
